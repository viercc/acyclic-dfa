name:                acyclic-dfa
version:             0.2.1.0
synopsis:            Acyclic deterministic finite automatons to recognize finite number of strings
description:         Please see README.md
license:             BSD3
license-file:        LICENSE
author:              Koji Miyazato
maintainer:          viercc@gmail.com
copyright:           Koji Miyazato
category:            Data Structure, Automaton
build-type:          Simple
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     Data.ADFA,
                       Data.ADFA.Internal,
                       Data.ADFA.IdVector
  other-modules:       Data.These,
                       Data.ADFA.Util,
                       Data.ADFA.NodeId,
                       Data.ADFA.IdMap,
                       Data.ADFA.IdSet,
                       Data.ADFA.IdVector.Unsafe,
                       Data.Vector.Growable
  build-depends:       base >= 4.8 && < 5,
                       deepseq,
                       containers,
                       vector,
                       primitive,
                       mtl
  default-language:    Haskell2010
  ghc-options:         -Wall -Wno-dodgy-exports

test-suite adfa-test
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        Spec.hs
  other-modules:  Data.ADFA.ADFASpec,
                  Data.ADFA.Gen,
                  Common
  build-depends: base >= 4.8 && < 5,
                 containers,
                 vector,
                 QuickCheck,
                 hspec,
                 acyclic-dfa
  ghc-options: -Wall -O2 -threaded -rtsopts -with-rtsopts=-N
  default-language: Haskell2010

benchmark adfa-benchmark
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             adfa-benchmark.hs
  build-depends:       base,
                       deepseq,
                       containers,
                       criterion,
                       vector,
                       mwc-random,
                       acyclic-dfa,
                       trie-simple
  ghc-options:         -Wall -O2 -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010
